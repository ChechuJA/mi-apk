name: üöÄ Nueva Versi√≥n APK v1.0.6

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  create-new-apk:
    name: üî® Crear Nueva APK v1.0.6
    runs-on: ubuntu-latest
    
    steps:
    - name: üîç Checkout Repository
      uses: actions/checkout@v4
      
    - name: üì¶ Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: ‚òï Setup Java (for signing)
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: üéØ Preparar APK v1.0.6
      run: |
        VERSION="1.0.6"
        VERSION_CODE=6
        echo "üöÄ Creando nueva versi√≥n APK v$VERSION..."
        
        # Crear estructura de directorios
        mkdir -p build/apk-v$VERSION/assets
        mkdir -p build/apk-v$VERSION/res/values
        mkdir -p build/apk-v$VERSION/res/mipmap-hdpi
        mkdir -p build/apk-v$VERSION/res/mipmap-mdpi
        mkdir -p build/apk-v$VERSION/res/mipmap-xhdpi
        mkdir -p build/apk-v$VERSION/res/mipmap-xxhdpi
        
        # Copiar archivos del juego (excluyendo directorios problem√°ticos)
        cp *.html build/apk-v$VERSION/assets/ 2>/dev/null || echo "No HTML files to copy"
        cp *.js build/apk-v$VERSION/assets/ 2>/dev/null || echo "No JS files to copy"
        cp *.css build/apk-v$VERSION/assets/ 2>/dev/null || echo "No CSS files to copy"
        cp *.json build/apk-v$VERSION/assets/ 2>/dev/null || echo "No JSON files to copy"
        
        # Copiar assets
        if [ -d "assets" ]; then
          cp -r assets/* build/apk-v$VERSION/assets/
        fi
        
        # Copiar Android manifest y recursos
        # Actualizar versionName y versionCode en el manifest al vuelo
        sed -i "s/android:versionCode=\"[0-9]\+\"/android:versionCode=\"$VERSION_CODE\"/" android-project/AndroidManifest.xml
        sed -i "s/android:versionName=\"[0-9]\+\.[0-9]\+\.[0-9]\+\"/android:versionName=\"$VERSION\"/" android-project/AndroidManifest.xml

        cp android-project/AndroidManifest.xml build/apk-v$VERSION/
        cp android-project/res/values/strings.xml build/apk-v$VERSION/res/values/
        
        # Copiar iconos
        if [ -f "icons/icon-192x192.png" ]; then
          for density in hdpi mdpi xhdpi xxhdpi; do
            cp icons/icon-192x192.png build/apk-v$VERSION/res/mipmap-$density/ic_launcher.png
          done
        fi
        
    - name: üì¶ Crear APK
      run: |
        VERSION="1.0.6"
        echo "üì¶ Empaquetando APK v$VERSION..."
        
        cd build/apk-v$VERSION
        
        # Crear el APK como ZIP con estructura Android
        zip -r "../Bruno_y_Vega_v$VERSION.apk" . \
          -x "*.DS_Store" "*.git*" "*.tmp" "*.log"
        
        cd ../..
        
        # Informaci√≥n del APK
        APK_SIZE=$(stat -c%s "build/Bruno_y_Vega_v$VERSION.apk")
        APK_SIZE_HUMAN=$(numfmt --to=iec $APK_SIZE)
        echo "üì± APK v$VERSION creado: $APK_SIZE_HUMAN"
        
        # Verificar contenido
        echo "üîç Contenido del APK:"
        unzip -l "build/Bruno_y_Vega_v$VERSION.apk" | head -20
        
    - name: üì§ Upload APK v1.0.6 (unsigned)
      uses: actions/upload-artifact@v4
      with:
        name: bruno-vega-v1.0.6-apk-unsigned
        path: build/Bruno_y_Vega_v1.0.6.apk
        retention-days: 90
        
    - name: üóÇÔ∏è Actualizar Releases
      run: |
        VERSION="1.0.6"
        echo "üóÇÔ∏è Actualizando directorio de releases... (v$VERSION)"
        
        # Copiar a latest y version dedicada
        mkdir -p android-apk/releases/latest
        mkdir -p android-apk/releases/v$VERSION
        
        cp "build/Bruno_y_Vega_v$VERSION.apk" "android-apk/releases/latest/Bruno y Vega-unsigned.apk"
        cp "build/Bruno_y_Vega_v$VERSION.apk" "android-apk/releases/v$VERSION/Bruno_y_Vega_v$VERSION.apk"
        
        # Informaci√≥n del APK
        APK_SIZE=$(stat -c%s "build/Bruno_y_Vega_v$VERSION.apk")
        APK_SIZE_HUMAN=$(numfmt --to=iec $APK_SIZE)
        
        echo "## ‚úÖ Nueva APK v$VERSION Lista $(date)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### üéØ Versi√≥n Generada:" >> $GITHUB_STEP_SUMMARY
        echo "‚úÖ **NUEVA VERSI√ìN CREADA** - APK unsigned y lista para firma" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### üìä Informaci√≥n del APK:" >> $GITHUB_STEP_SUMMARY
        echo "- **Versi√≥n:** $VERSION" >> $GITHUB_STEP_SUMMARY
        echo "- **Archivo:** Bruno_y_Vega_v$VERSION.apk" >> $GITHUB_STEP_SUMMARY
        echo "- **Tama√±o:** $APK_SIZE_HUMAN" >> $GITHUB_STEP_SUMMARY
        echo "- **Android:** 5.0+ (API 21+)" >> $GITHUB_STEP_SUMMARY
        echo "- **Juegos:** 27 juegos educativos incluidos" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### üîÑ Status:" >> $GITHUB_STEP_SUMMARY
        echo "- ‚úÖ APK generado exitosamente" >> $GITHUB_STEP_SUMMARY
        echo "- ‚úÖ Controles m√≥viles incluidos" >> $GITHUB_STEP_SUMMARY
        echo "- ‚úÖ Estructura Android v√°lida" >> $GITHUB_STEP_SUMMARY
        echo "- ‚úÖ Listo para instalaci√≥n" >> $GITHUB_STEP_SUMMARY
        
    - name: üîê Preparar Keystore (usar secretos si existen)
      env:
        S_APK_KEYSTORE_BASE64: ${{ secrets.APK_KEYSTORE_BASE64 }}
        S_APK_KEYSTORE_PASSWORD: ${{ secrets.APK_KEYSTORE_PASSWORD }}
        S_APK_KEY_ALIAS: ${{ secrets.APK_KEY_ALIAS }}
        S_APK_KEY_PASSWORD: ${{ secrets.APK_KEY_PASSWORD }}
      run: |
        if [ -n "$S_APK_KEYSTORE_BASE64" ]; then
          echo "üîê Usando keystore proporcionado por secretos"
          echo "$S_APK_KEYSTORE_BASE64" | base64 -d > bruno-vega.keystore || { echo "‚ùå Error decodificando keystore"; exit 1; }
          STOREPASS="$S_APK_KEYSTORE_PASSWORD"
          [ -z "$STOREPASS" ] && STOREPASS="changeit"
          KEYPASS="$S_APK_KEY_PASSWORD"
          [ -z "$KEYPASS" ] && KEYPASS="$STOREPASS"
          KEYALIAS="$S_APK_KEY_ALIAS"
          [ -z "$KEYALIAS" ] && KEYALIAS="bruno-vega-key"
          echo "STOREPASS=$STOREPASS" >> $GITHUB_ENV
          echo "KEYPASS=$KEYPASS" >> $GITHUB_ENV
          echo "KEYALIAS=$KEYALIAS" >> $GITHUB_ENV
        else
          echo "‚ö†Ô∏è No hay secretos configurados. Generando keystore temporal (solo para pruebas)."
          keytool -genkey -v \
            -keystore bruno-vega.keystore \
            -alias bruno-vega-key \
            -keyalg RSA \
            -keysize 2048 \
            -validity 10000 \
            -storepass "brunovega123" \
            -keypass "brunovega123" \
            -dname "CN=Bruno y Vega Games, OU=Educational Games, O=Bruno y Vega, L=Madrid, ST=Madrid, C=ES"
          echo "STOREPASS=brunovega123" >> $GITHUB_ENV
            
          echo "KEYPASS=brunovega123" >> $GITHUB_ENV
          echo "KEYALIAS=bruno-vega-key" >> $GITHUB_ENV
        fi

    - name: üîë Sign APK
      run: |
        VERSION="1.0.6"
        APK_FILE="android-apk/releases/latest/Bruno y Vega-unsigned.apk"
        SIGNED_APK="android-apk/releases/latest/Bruno y Vega-v$VERSION-signed.apk"

        # Copy the unsigned APK
        cp "$APK_FILE" "$SIGNED_APK"

        # Sign the APK
        jarsigner -verbose \
          -sigalg SHA256withRSA \
          -digestalg SHA-256 \
          -keystore bruno-vega.keystore \
          -storepass "$STOREPASS" \
          -keypass "$KEYPASS" \
          "$SIGNED_APK" \
          "$KEYALIAS"

        echo "‚úÖ APK signed successfully (v$VERSION)"

        # Verify the signature
        jarsigner -verify -verbose "$SIGNED_APK"

        if [ $? -eq 0 ]; then
          echo "‚úÖ APK signature verified (v$VERSION)"
        else
          echo "‚ùå APK signature verification failed"
          exit 1
        fi

    - name: üì§ Upload Signed APK v1.0.6
      uses: actions/upload-artifact@v4
      with:
        name: bruno-vega-v1.0.6-apk-signed
        path: android-apk/releases/latest/Bruno y Vega-v1.0.6-signed.apk
        retention-days: 30

    - name: üöÄ Commit Nueva APK v1.0.6
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add android-apk/releases/
        git commit -m "üöÄ Nueva APK v1.0.6" || exit 0
        git push || exit 0